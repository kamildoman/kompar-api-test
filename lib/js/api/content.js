var last,elements=[],lastElem=null;function addEvent(){var n,s=document.getElementsByClassName("dropdown-btn");for(n=0;n<s.length;n++)s[n].addEventListener("click",function(){this.classList.toggle("active");var n=this.nextElementSibling;"block"===n.style.display?n.style.display="none":n.style.display="block"})}function calculate(){$("#sidenav").children().each(function(){const n=this;if("HR"!==n.nodeName&&"BR"!==n.nodeName)if("DIV"==n.nodeName)$(`#${n.id}`).children().each(function(){const n=this.id.substring(0,this.id.length-1),s=document.getElementById(`${n}`).offsetTop;elements.push({id:n,offsetTop:s,dropdown:!1,dropdownChild:!0,parentId:lastElem.id.substring(0,lastElem.id.length-1)})});else{const s=n.id.substring(0,n.id.length-1),p=document.getElementById(`${s}`).offsetTop;"dropdown-btn"==n.className?elements.push({id:s,offsetTop:p,dropdown:!0,dropdownChild:!1}):elements.push({id:s,offsetTop:p,dropdown:!1,dropdownChild:!1})}lastElem=n})}function openCurrentDropdown(n,s){var p,o=document.getElementsByClassName("dropdown-btn");for(p=0;p<o.length;p++){if(o[p].id===`${n}_`)s&&o[p].classList.toggle("active"),o[p].nextElementSibling.style.display="block"}}function closeAllDropdown(){var n,s=document.getElementsByClassName("dropdown-btn");for(n=0;n<s.length;n++){s[n].classList.toggle("active");var p=s[n].nextElementSibling;"block"===p.style.display&&(p.style.display="none")}}function authorizationBash(n){document.getElementById("authorizationContent").innerHTML='<pre>\n                    <span style="color: orange">curl</span> -X GET &#92; <br> \n                    &nbsp;&nbsp;url/token &#92;<br>\n                    &nbsp;&nbsp-H <span style="color: #E5DA73">"Authorization: Basic xxx...yyy...zzz"</span>\n                </pre>',n&&calculate()}function authorizationNode(n){document.getElementById("authorizationContent").innerHTML='<pre>\n                    <span style="color: #509fd3">const</span> fetch = <span style="color: orange">require</span>(<span style="color: #E5DA73">"node-fetch"</span>); <br>\n                    (<span style="color: #509fd3">async</span> () => { <br>\n                        &nbsp;&nbsp;&nbsp;<span style="color: #509fd3">const</span> token = <span style="color: #509fd3">await</span> fetch(<span style="color: #E5DA73">"url/token"</span>, { <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method: <span style="color: #E5DA73">"GET"</span>, <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headers: { <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"Authorization"</span>: <span style="color: #E5DA73">"Basic xxx...yyy...zzz"</span> <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, <br>\n                        &nbsp;&nbsp;&nbsp;})<span style="color: #509fd3">.then</span>(res => res.json());<br>\n                    })();\n                </pre>',n&&calculate()}function authorizationPython(n){document.getElementById("authorizationContent").innerHTML='<pre>\n                    <span style="color: orange">import</span> requests<br>\n                    token = requests.get(<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp<span style="color: #E5DA73">\'url/token\'</span>,<br>\n                    &nbsp;&nbsp;&nbsp;&nbspheaders={ <span style="color: #E5DA73">\'Authorization\'</span>: <span style="color: #E5DA73">\'Basic xxx...yyy...zzz\'</span> }<br>\n                    ).json()\n                </pre>',n&&calculate()}function authenticationBash(n){document.getElementById("authenticationContent").innerHTML='<pre>\n                    <span style="color: orange">curl</span> -X TYPE &#92; <br> \n                    &nbsp;&nbsp;url/some/request &#92;<br>\n                    &nbsp;&nbsp-H <span style="color: #E5DA73">"Authorization: Bearer xxxxx...yyyyy...zzzzz"</span>\n                </pre>',n&&calculate()}function authenticationNode(n){document.getElementById("authenticationContent").innerHTML='<pre>\n                    <span style="color: #509fd3">const</span> fetch = <span style="color: orange">require</span>(<span style="color: #E5DA73">"node-fetch"</span>); <br>\n                    (<span style="color: #509fd3">async</span> () => { <br>\n                        &nbsp;&nbsp;&nbsp;<span style="color: #509fd3">const</span> token = <span style="color: #509fd3">await</span> fetch(<span style="color: #E5DA73">"url/some/request"</span>, { <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method: <span style="color: #E5DA73">"TYPE"</span>, <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headers: { <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"Authorization"</span>: <span style="color: #E5DA73">"Bearer xxxxx...yyyyy...zzzzz"</span> <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, <br>\n                        &nbsp;&nbsp;&nbsp;}); <br>\n                    })();\n                </pre>',n&&calculate()}function applicationWebhookBash(n){document.getElementById("applicationWebhookContent").innerHTML='<pre>\n                    <span style="color: orange">curl</span> -X POST &#92; <br>\n                    &nbsp;&nbsp;url/webhooks/applications &#92; <br>\n                    &nbsp;&nbsp;-H <span style="color: #E5DA73">\'Content-Type: application/json\'</span> &#92; <br>\n                    &nbsp;&nbsp;-H <span style="color: #E5DA73">\'Authorization: Bearer xxxxx...yyyyy...zzzzz\'</span> &#92; <br>\n                    &nbsp;&nbsp;-d \'{&nbsp<span style="color: #E5DA73">"url"</span>:<span style="color: #E5DA73">"https://some.url"</span>&nbsp}\'\n                </pre>',n&&calculate()}function applicationWebhookNode(n){document.getElementById("applicationWebhookContent").innerHTML='<pre>\n                    <span style="color: #509fd3">const</span> fetch = <span style="color: orange">require</span>(<span style="color: #E5DA73">"node-fetch"</span>); <br>\n                    (<span style="color: #509fd3">async</span> () => { <br>\n                        &nbsp;&nbsp;&nbsp;<span style="color: #509fd3">const</span> webhook = <span style="color: #509fd3">await</span> fetch(<span style="color: #E5DA73">"url/webhooks/applications"</span>, {<br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method: <span style="color: #E5DA73">"POST"</span>, <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headers: { <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"Authorization"</span>: <span style="color: #E5DA73">"Bearer xxxxx...yyyyy...zzzzz"</span> <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"Content-Type"</span>: <span style="color: #E5DA73">"application/json"</span> <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body: { <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"url"</span>: <span style="color: #E5DA73">"https://some.url"</span> <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>\n                        &nbsp;&nbsp;&nbsp;})<span style="color: #509fd3">.then</span>(res => res.json());<br>\n                    })();\n                </pre>',n&&calculate()}function applicationWebhookPython(n){document.getElementById("applicationWebhookContent").innerHTML='<pre>\n                    <span style="color: orange">import</span> requests<br>\n                    webhook = requests.post(<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'url/webhooks/applications\'</span>,<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;headers={<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'Authorization\'</span>: <span style="color: #E5DA73">\'Bearer xxxxx...yyyyy...zzzzz\'</span>,<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'Content-Type\'</span>: <span style="color: #E5DA73">\'application/json\'</span><br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;},<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;json={<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'url\'</span>: <span style="color: #E5DA73">\'https://some.url\'</span><br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;}<br>\n                    ).json()\n                </pre>',n&&calculate()}function decisionsWebhookBash(n){document.getElementById("decisionsWebhookContent").innerHTML='<pre>\n                    <span style="color: orange">curl</span> -X POST &#92; <br>\n                    &nbsp;&nbsp;url/webhooks/decisions &#92; <br>\n                    &nbsp;&nbsp;-H <span style="color: #E5DA73">\'Content-Type: application/json\'</span> &#92; <br>\n                    &nbsp;&nbsp;-H <span style="color: #E5DA73">\'Authorization: Bearer xxxxx...yyyyy...zzzzz\'</span> &#92; <br>\n                    &nbsp;&nbsp;-d \'{&nbsp<span style="color: #E5DA73">"url"</span>:<span style="color: #E5DA73">"https://some.url"</span>&nbsp}\'\n                </pre>',n&&calculate()}function decisionsWebhookNode(n){document.getElementById("decisionsWebhookContent").innerHTML='<pre>\n                    <span style="color: #509fd3">const</span> fetch = <span style="color: orange">require</span>(<span style="color: #E5DA73">"node-fetch"</span>); <br>\n                    (<span style="color: #509fd3">async</span> () => { <br>\n                        &nbsp;&nbsp;&nbsp;<span style="color: #509fd3">const</span> webhook = <span style="color: #509fd3">await</span> fetch(<span style="color: #E5DA73">"url/webhooks/decisions"</span>, {<br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method: <span style="color: #E5DA73">"POST"</span>, <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headers: { <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"Authorization"</span>: <span style="color: #E5DA73">"Bearer xxxxx...yyyyy...zzzzz"</span> <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"Content-Type"</span>: <span style="color: #E5DA73">"application/json"</span> <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body: { <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"url"</span>: <span style="color: #E5DA73">"https://some.url"</span> <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>\n                        &nbsp;&nbsp;&nbsp;})<span style="color: #509fd3">.then</span>(res => res.json()); <br>\n                    })();\n                </pre>',n&&calculate()}function decisionsWebhookPython(n){document.getElementById("decisionsWebhookContent").innerHTML='<pre>\n                    <span style="color: orange">import</span> requests<br>\n                    webhook = requests.post(<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'url/webhooks/decisions\'</span>,<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;headers={<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'Authorization\'</span>: <span style="color: #E5DA73">\'Bearer xxxxx...yyyyy...zzzzz\'</span>,<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'Content-Type\'</span>: <span style="color: #E5DA73">\'application/json\'</span><br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;},<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;json={<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'url\'</span>: <span style="color: #E5DA73">\'https://some.url\'</span><br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;}<br>\n                    ).json()\n                </pre>',n&&calculate()}function deleteWebhookBash(n){document.getElementById("deleteWebhookContent").innerHTML='<pre>\n                    <span style="color: orange">curl</span> -X DELETE &#92;<br>\n                    &nbsp;&nbsp;url/webhooks/applications &#92;<br>\n                    &nbsp;&nbsp;-H <span style="color: #E5DA73">\'Authorization: Bearer xxxxx...yyyyy...zzzzz\'</span>;<br>\n                </pre>',n&&calculate()}function deleteWebhookNode(n){document.getElementById("deleteWebhookContent").innerHTML='<pre>\n                    <span style="color: #509fd3">const</span> fetch = <span style="color: orange">require</span>(<span style="color: #E5DA73">"node-fetch"</span>); <br>\n                    (<span style="color: #509fd3">async</span> () => { <br>\n                        &nbsp;&nbsp;&nbsp;<span style="color: #509fd3">const</span> response = <span style="color: #509fd3">await</span> fetch(<span style="color: #E5DA73">"url/webhooks/applications"</span>, {<br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method: <span style="color: #E5DA73">"DELETE"</span>, <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headers: { <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"Authorization"</span>: <span style="color: #E5DA73">"Bearer xxxxx...yyyyy...zzzzz"</span> <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>\n                        &nbsp;&nbsp;&nbsp;})<span style="color: #509fd3">.then</span>(res => res.json()); <br>\n                    })();\n                </pre>',n&&calculate()}function deleteWebhookPython(n){document.getElementById("deleteWebhookContent").innerHTML='<pre>\n                    <span style="color: orange">import</span> requests<br>\n                    response = requests.delete(<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'url/webhooks/applications\'</span>,<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;headers={<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'Authorization\'</span>: <span style="color: #E5DA73">\'Bearer xxxxx...yyyyy...zzzzz\'</span><br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;},<br>\n                    ).json()\n                </pre>',n&&calculate()}function checkTokenNode(n){document.getElementById("checkTokenContent").innerHTML='<pre>\n                    <span style="color: #509fd3">const</span> TOKEN = YOUR SECRET TOKEN;<br>\n                    <span style="color: #509fd3">const</span> headers = HEADERS OF THE REQUEST;<br>\n                    <span style="color: #509fd3">const</span> authorization = headers.authorization;<br>\n                    <span style="color: #509fd3">if</span> (!authorization || authorization.indexOf(<span style="color: #E5DA73">"token "</span> === -1) {<br>\n                    &nbsp;&nbsp;&nbsp;<span style="color: #509fd3">return</span>;<br>\n                    }<br>\n                    <span style="color: #509fd3">const</span> token = authorization.split(<span style="color: #E5DA73">" "</span>)[1];<br>\n                    <span style="color: #509fd3">if</span> (token !== TOKEN) {<br>\n                    &nbsp;&nbsp;&nbsp;<span style="color: #509fd3">return</span>;<br>\n                    }<br>\n                </pre>',n&&calculate()}function checkTokenPython(n){document.getElementById("checkTokenContent").innerHTML='<pre>\n                    headers = HEADERS OF THE REQUEST<br>\n                    authorization = headers.get(<span style="color: #E5DA73">"Authorization"</span>)<br>\n                    <span style="color: #509fd3">if</span> authorization <span style="color: #509fd3">is None or not</span> <span style="color: #E5DA73">"token"</span> <span style="color: #509fd3">in</span> authorization:<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #509fd3">return</span><br>\n                    token = authorization.split(<span style="color: #E5DA73">" "</span>)[1]<br>\n                    <span style="color: #509fd3">if</span> token != YOUR TOKEN:<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #509fd3">return</span>\n                </pre>',n&&calculate()}function applicationWebhookDetailsNode(n){document.getElementById("applicationWebhookDetailsContent").innerHTML='<pre>\n                    <span style="color: #509fd3">const</span> crypto = <span style="color: orange">require</span>(<span style="color: #E5DA73">"crypto"</span>); <br>\n                    <br>\n                    <span style="color: #509fd3">const</span> body = BODY OF THE REQUEST; <br>\n                    <span style="color: #509fd3">const</span> key = YOUR KEY; <br>\n                    <span style="color: #509fd3">const</span> iv = <span style="color: orange">Buffer</span>.from(body.iv, <span style="color: #E5DA73">"base64"</span>).toString(<span style="color: #E5DA73">"binary"</span>).substr(0, 16);<br>\n                    <span style="color: #509fd3">const</span> encryptedData = <span style="color: orange">Buffer</span>.from(body.data, <span style="color: #E5DA73">"base64"</span>).toString();<br>\n                    <span style="color: #509fd3">const</span> decipher = crypto.createDecipheriv(<span style="color: #E5DA73">"AES-256-CBC"</span>, key, iv);<br>\n                    <span style="color: #509fd3">const</span> decrypted = decipher.update(encryptedData, <span style="color: #E5DA73">"base64"</span>, <span style="color: #E5DA73">"utf8"</span>) + decipher.final(<span style="color: #E5DA73">"utf8"</span>);<br>\n                </pre>',n&&calculate()}function applicationWebhookDetailsPython(n){document.getElementById("applicationWebhookDetailsContent").innerHTML='<pre>\n                    <span style="color: #509fd3">const</span> crypto = <span style="color: orange">require</span>(<span style="color: #E5DA73">"crypto"</span>); <br>\n                    <br>\n                    <span style="color: #509fd3">const</span> body = BODY OF THE REQUEST; <br>\n                    <span style="color: #509fd3">const</span> key = YOUR KEY; <br>\n                    <span style="color: #509fd3">const</span> iv = <span style="color: orange">Buffer</span>.from(body.iv, <span style="color: #E5DA73">"base64"</span>).toString(<span style="color: #E5DA73">"binary"</span>).substr(0, 16);<br>\n                    <span style="color: #509fd3">const</span> encryptedData = <span style="color: orange">Buffer</span>.from(body.data, <span style="color: #E5DA73">"base64"</span>).toString();<br>\n                    <span style="color: #509fd3">const</span> decipher = crypto.createDecipheriv(<span style="color: #E5DA73">"AES-256-CBC"</span>, key, iv);<br>\n                    <span style="color: #509fd3">const</span> decrypted = decipher.update(encryptedData, <span style="color: #E5DA73">"base64"</span>, <span style="color: #E5DA73">"utf8"</span>) + decipher.final(<span style="color: #E5DA73">"utf8"</span>);<br>\n                </pre>',n&&calculate()}function offerBashContent(n){document.getElementById("offerContent").innerHTML='<pre>\n                    <span style="color: orange">curl</span> -X POST &#92;<br>\n                    &nbsp;&nbsp;url/offer &#92;<br>\n                    &nbsp;&nbsp;-H <span style="color: #E5DA73">\'Content-Type: application/json\'</span> &#92;<br>\n                    &nbsp;&nbsp;-H <span style="color: #E5DA73">\'Authorization: Bearer xxxxx...yyyyy...zzzzz\'</span> &#92;<br>\n                    &nbsp;&nbsp;-d \'{<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"application_id"</span>:<span style="color: #E5DA73">"1581933624854x717991094173476900"</span>,<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"granted_amount"</span>:<span style="color: #E5DA73">"10000"</span>,<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"total_cost"</span>:<span style="color: #E5DA73">"12000"</span><br>\n                    &nbsp;&nbsp;&nbsp}\'\n                </pre>',n&&calculate()}function offerNodeContent(n){document.getElementById("offerContent").innerHTML='<pre>\n                    <span style="color: #509fd3">const</span> fetch = <span style="color: orange">require</span>(<span style="color: #E5DA73">"node-fetch"</span>); <br>\n                    (<span style="color: #509fd3">async</span> () => { <br>\n                        &nbsp;&nbsp;&nbsp;<span style="color: #509fd3">const</span> response = <span style="color: #509fd3">await</span> fetch(<span style="color: #E5DA73">"url/offer"</span>, {<br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method: <span style="color: #E5DA73">"POST"</span>, <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headers: { <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"Authorization"</span>: <span style="color: #E5DA73">"Bearer xxxxx...yyyyy...zzzzz"</span> <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"Content-Type"</span>: <span style="color: #E5DA73">"application/json"</span> <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body: { <br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"application_id"</span>: <span style="color: #E5DA73">"1581933624854x717991094173476900"</span><br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"granted_amount"</span>: <span style="color: #E5DA73">"10000"</span><br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">"total_cost"</span>: <span style="color: #E5DA73">"12000"</span><br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>\n                        &nbsp;&nbsp;&nbsp;})<span style="color: #509fd3">.then</span>(res => res.json()); <br>\n                    })();\n                </pre>',n&&calculate()}function offerPythonContent(n){document.getElementById("offerContent").innerHTML='<pre>\n                    <span style="color: orange">import</span> requests<br>\n                    response = requests.post(<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'url/offer\'</span>,<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;headers={<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'Authorization\'</span>: <span style="color: #E5DA73">\'Bearer xxxxx...yyyyy...zzzzz\'</span>,<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'Content-Type\'</span>: <span style="color: #E5DA73">\'application/json\'</span><br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;},<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;json={<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'application_id\'</span>: <span style="color: #E5DA73">\'1581933624854x717991094173476900\'</span>,<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'granted_amount\'</span>: <span style="color: #E5DA73">\'10000\'</span>,<br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #E5DA73">\'total_cost\'</span>: <span style="color: #E5DA73">\'12000\'</span><br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;}<br>\n                    ).json()\n                </pre>',n&&calculate()}window.addEventListener("load",n=>{""===(last=window.location.hash.substr(1))?(document.getElementById("Introduction_").style.background="rgb(194, 193, 193)",last="Introduction"):document.getElementById(`${last}_`).style.background="rgb(194, 193, 193)",authorizationBash(!1),authenticationBash(!1),applicationWebhookBash(!1),decisionsWebhookBash(!1),deleteWebhookBash(!1),checkTokenNode(!1),applicationWebhookDetailsNode(!1),offerBashContent(!1),addEvent(),calculate()}),window.addEventListener("scroll",function(n){for(var s=window.scrollY,p=0;p<elements.length;p++){const n=elements[p],o=elements[p+1];s>=n.offsetTop&&s<o.offsetTop&&n.id!=last&&(document.getElementById(`${n.id}_`).style.background="rgb(194, 193, 193)",document.getElementById(`${last}_`).style.background="#509fd3",last=n.id,n.dropdown?(closeAllDropdown(),openCurrentDropdown(n.id,!0)):n.dropdownChild?(closeAllDropdown(),openCurrentDropdown(n.parentId,!1)):closeAllDropdown())}});